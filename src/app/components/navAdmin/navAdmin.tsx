import Link from "next/link";
import { usePathname } from "next/navigation";
const NavAdmin = ({ nav, handleShowNav }: any) => {
  const pathname = usePathname();
  return (
    <>
      <div
        className={`fixed bottom-[0] top-[0] left-[0] duration-200 bg-button ${
          nav ? "w-[75px] " : " w-[265px] "
        }`}
      >
        <div className="w-full px-[20px] relative border-dashed border-b-[1px] border-[#22242e]">
          <LogoNav nav={nav} />
          <div
            onClick={handleShowNav}
            className="group hover:bg-hover1 absolute cursor-pointer right-[-15px] w-[30px] h-[30px] bg-[#fff] rounded-[4px] top-[50%] translate-y-[-50%] flex justify-center items-center"
          >
            <svg
              fill="none"
              height="16"
              viewBox="0 0 48 48"
              width="16"
              xmlns="http://www.w3.org/2000/svg"
              className={`duration-200 ${nav ? "rotate-180" : "rotate-0"}`}
            >
              <path d="m0 0h48v48h-48z" fill="#fff" fillOpacity=".01" />
              <g
                className="stroke-[#131118] "
                stroke="currentColor"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth="4"
              >
                <path d="m5.79891 24h35.99999" />
                <path d="m17.7988 36-11.99997-12 11.99997-12" />
              </g>
            </svg>
          </div>
        </div>
        <div className="w-full px-[20px] py-[20px] overflow-hidden">
          <Link
            href="/admin"
            className={`flex items-center px-[16px] min-w-[220px] py-[10px] [&.activeNav]:bg-[#1c1c21] rounded-[8px] ${
              pathname == "/admin" ? "activeNav" : ""
            }`}
          >
            <IconDashBoard color={pathname == "/admin" ? "#fff" : "#9a9cae"} />
            <TitleNav
              title="DashBoard"
              check={pathname == "/admin" ? true : false}
              nav={nav}
            />
          </Link>
          <Link
            href="/admin/product"
            className={`flex items-center px-[16px] min-w-[220px] py-[10px] [&.activeNav]:bg-[#1c1c21] rounded-[8px] ${
              pathname.startsWith("/admin/product") ? "activeNav" : ""
            }`}
          >
            <IconProduct
              color={pathname.startsWith("/admin/product") ? "#fff" : "#9a9cae"}
            />
            <TitleNav
              title="Product"
              check={pathname.startsWith("/admin/product") ? true : false}
              nav={nav}
            />
          </Link>
          <Link
            href="/admin/user"
            className={`flex items-center px-[16px] min-w-[220px] py-[10px] [&.activeNav]:bg-[#1c1c21] rounded-[8px] ${
              pathname == "/admin/user" ? "activeNav" : ""
            }`}
          >
            <IconUser color={pathname == "/admin/user" ? "#fff" : "#9a9cae"} />
            <TitleNav
              title="Users"
              check={pathname == "/admin/user" ? true : false}
              nav={nav}
            />
          </Link>
        </div>
      </div>
    </>
  );
};

const TitleNav = ({ title, check, nav }: any) => {
  return (
    <h1
      className={`ml-[8px] font-medium text-[1.6em] capitalize duration-200 select-none ${
        check ? "text-white" : "text-[#9a9cae]"
      } ${nav ? "opacity-0" : "opacity-100"}`}
    >
      {title}
    </h1>
  );
};

const LogoNav = ({ nav }: any) => {
  const colorLogo = "#fff";
  return (
    <svg
      width="100"
      height="80"
      viewBox="0 0 143 59"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g clipPath="url(#clip0_2_2771)">
        <path
          d="M0 7.89771V23.6108L9.39604 16.3872L0 7.89771Z"
          fill={colorLogo}
        />
        <path
          d="M0 50.1381L9.39604 41.6506L0 34.4325V50.1381Z"
          fill={colorLogo}
        />
        <path
          d="M17.6191 26.8653L41.2598 7.89734H27.4806L0 29.0224L17.6191 26.8653Z"
          fill={colorLogo}
        />
        <path
          d="M0 29.0223L27.4806 50.1393H41.2598L17.6191 31.1677L0 29.0223Z"
          fill={colorLogo}
        />
        <path
          d="M48.6411 9.71947H53.2872V47.9814H48.6411V9.71947ZM68.3187 9.71947H74.058L57.496 27.6479L74.8779 47.9814H69.1386L51.8661 27.7572L68.3187 9.71947Z"
          fill={colorLogo}
          className={`${nav ? "opacity-0" : "opacity-100"} duration-200`}
        />
        <path
          d="M83.647 22.8379V47.9814H79.2742V22.8379H83.647ZM91.2447 27.6479C90.6617 27.2106 90.1333 26.9009 89.6596 26.7187C89.1858 26.5001 88.5846 26.3907 87.8558 26.3907C86.7626 26.3907 85.9062 26.6641 85.2868 27.2106C84.6673 27.7572 84.23 28.5043 83.9749 29.4517C83.7563 30.3991 83.647 31.4741 83.647 32.6766H81.6792C81.6792 30.6724 82.0254 28.9051 82.7178 27.3746C83.4465 25.8077 84.3758 24.5688 85.5054 23.6578C86.635 22.7468 87.7829 22.2913 88.949 22.2913C89.86 22.2913 90.6981 22.4188 91.4633 22.6739C92.265 22.8925 92.9938 23.348 93.6497 24.0404L91.2447 27.6479Z"
          fill={colorLogo}
          className={`${nav ? "opacity-0" : "opacity-100"} duration-200`}
        />
        <path
          d="M98.0101 12.4525C98.0101 11.6143 98.3017 10.9038 98.8847 10.3207C99.5042 9.73769 100.215 9.44617 101.016 9.44617C101.855 9.44617 102.565 9.73769 103.148 10.3207C103.731 10.9038 104.023 11.6143 104.023 12.4525C104.023 13.2541 103.731 13.9647 103.148 14.5842C102.565 15.1672 101.855 15.4588 101.016 15.4588C100.215 15.4588 99.5042 15.1672 98.8847 14.5842C98.3017 13.9647 98.0101 13.2541 98.0101 12.4525ZM98.83 22.8379H103.203V47.9814H98.83V22.8379Z"
          fill={colorLogo}
          className={`${nav ? "opacity-0" : "opacity-100"} duration-200`}
        />
        <path
          d="M113.247 40.2744C113.758 41.0396 114.341 41.7502 114.997 42.4061C115.652 43.062 116.4 43.5904 117.238 43.9913C118.112 44.3557 119.06 44.5379 120.08 44.5379C121.319 44.5379 122.285 44.2646 122.977 43.718C123.706 43.1349 124.07 42.3515 124.07 41.3676C124.07 40.493 123.779 39.7642 123.196 39.1812C122.649 38.5617 121.938 38.0515 121.064 37.6507C120.189 37.2134 119.26 36.8126 118.276 36.4482C117.183 36.0109 116.072 35.5007 114.942 34.9177C113.849 34.2982 112.919 33.5148 112.154 32.5673C111.425 31.5834 111.061 30.3627 111.061 28.9051C111.061 27.4111 111.444 26.1721 112.209 25.1882C113.011 24.2044 114.031 23.4756 115.27 23.0018C116.545 22.5281 117.857 22.2913 119.205 22.2913C120.554 22.2913 121.811 22.5099 122.977 22.9472C124.179 23.3845 125.236 23.9675 126.147 24.6963C127.058 25.4251 127.769 26.2632 128.279 27.2106L124.781 29.4517C124.088 28.5043 123.214 27.7208 122.157 27.1013C121.137 26.4818 119.971 26.1721 118.659 26.1721C117.748 26.1721 116.964 26.3725 116.308 26.7734C115.652 27.1742 115.325 27.7937 115.325 28.6318C115.325 29.2877 115.58 29.8708 116.09 30.3809C116.6 30.8911 117.256 31.3466 118.058 31.7474C118.859 32.1483 119.697 32.5309 120.572 32.8953C122.029 33.4783 123.36 34.116 124.562 34.8084C125.765 35.4643 126.712 36.266 127.404 37.2134C128.133 38.1609 128.498 39.3816 128.498 40.8756C128.498 43.062 127.696 44.884 126.093 46.3416C124.526 47.7992 122.449 48.528 119.861 48.528C118.185 48.528 116.673 48.2365 115.325 47.6535C113.976 47.034 112.828 46.2505 111.881 45.3031C110.97 44.3557 110.278 43.39 109.804 42.4061L113.247 40.2744Z"
          fill={colorLogo}
          className={`${nav ? "opacity-0" : "opacity-100"} duration-200`}
        />
        <path
          d="M130.428 22.8379H143V26.9374H130.428V22.8379ZM134.528 14.0923H138.9V47.9814H134.528V14.0923Z"
          fill={colorLogo}
          className={`${nav ? "opacity-0" : "opacity-100"} duration-200`}
        />
      </g>
      <defs>
        <clipPath id="clip0_2_2771">
          <rect width="143" height="58.1026" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
};

const IconUser = ({ color }: any) => {
  return (
    <svg
      width="24"
      height="24"
      strokeWidth="1.5"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M1 20V19C1 15.134 4.13401 12 8 12V12C11.866 12 15 15.134 15 19V20"
        stroke={color}
        strokeLinecap="round"
      />
      <path
        d="M13 14V14C13 11.2386 15.2386 9 18 9V9C20.7614 9 23 11.2386 23 14V14.5"
        stroke={color}
        strokeLinecap="round"
      />
      <path
        d="M8 12C10.2091 12 12 10.2091 12 8C12 5.79086 10.2091 4 8 4C5.79086 4 4 5.79086 4 8C4 10.2091 5.79086 12 8 12Z"
        stroke={color}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M18 9C19.6569 9 21 7.65685 21 6C21 4.34315 19.6569 3 18 3C16.3431 3 15 4.34315 15 6C15 7.65685 16.3431 9 18 9Z"
        stroke={color}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
};

const IconProduct = ({ color }: any) => {
  return (
    <svg
      fill="none"
      height="22"
      viewBox="0 0 48 48"
      width="22"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path d="m0 0h48v48h-48z" fill="#fff" fillOpacity=".01" />
      <path
        d="m4 14-.89443-1.7889c-.67757.3388-1.10557 1.0314-1.10557 1.7889zm20-10 .8944-1.78885c-.563-.28153-1.2258-.28153-1.7888 0zm20 10h2c0-.7575-.428-1.4501-1.1056-1.7889zm0 20 .8944 1.7889c.6776-.3388 1.1056-1.0314 1.1056-1.7889zm-20 10-.8944 1.7889c.563.2815 1.2258.2815 1.7888 0zm-20-10h-2c0 .7575.428 1.4501 1.10557 1.7889zm.89443-18.2111 19.99997-10.00005-1.7888-3.5777-20.00003 9.99995zm37.10557-1.7889v20h4v-20zm1.1056 18.2111-20 10 1.7888 3.5778 20-10zm-18.2112 10-19.99997-10-1.78886 3.5778 20.00003 10zm-18.8944-8.2111v-20h-4v20zm38.8944-21.7889-20-9.99995-1.7888 3.5777 20 10.00005z"
        fill={color}
      />
      <path
        d="m4 14 20 10"
        stroke={color}
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth="4"
      />
      <path clipRule="evenodd" d="m24 24v20z" fill={color} fillRule="evenodd" />
      <path
        d="m24 44v-20"
        stroke={color}
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth="4"
      />
      <path
        d="m44 14-20 10"
        stroke={color}
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth="4"
      />
      <path
        d="m34.8944 10.7889c.988-.494 1.3884-1.69537.8945-2.68333-.494-.98795-1.6954-1.3884-2.6833-.89442zm-21.7888 6.4222c-.988.494-1.3884 1.6954-.8945 2.6833.494.988 1.6954 1.3884 2.6833.8945zm20-9.99995-20 9.99995 1.7888 3.5778 20-10z"
        fill={color}
      />
    </svg>
  );
};

const IconDashBoard = ({ color }: any) => {
  return (
    <svg
      width="20"
      height="20"
      viewBox="0 0 15 15"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className="w-[20px] h-[20px]"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M2.8 1L2.74967 0.99997C2.52122 0.999752 2.32429 0.999564 2.14983 1.04145C1.60136 1.17312 1.17312 1.60136 1.04145 2.14983C0.999564 2.32429 0.999752 2.52122 0.99997 2.74967L1 2.8V5.2L0.99997 5.25033C0.999752 5.47878 0.999564 5.67572 1.04145 5.85017C1.17312 6.39864 1.60136 6.82688 2.14983 6.95856C2.32429 7.00044 2.52122 7.00025 2.74967 7.00003L2.8 7H5.2L5.25033 7.00003C5.47878 7.00025 5.67572 7.00044 5.85017 6.95856C6.39864 6.82688 6.82688 6.39864 6.95856 5.85017C7.00044 5.67572 7.00025 5.47878 7.00003 5.25033L7 5.2V2.8L7.00003 2.74967C7.00025 2.52122 7.00044 2.32429 6.95856 2.14983C6.82688 1.60136 6.39864 1.17312 5.85017 1.04145C5.67572 0.999564 5.47878 0.999752 5.25033 0.99997L5.2 1H2.8ZM2.38328 2.01382C2.42632 2.00348 2.49222 2 2.8 2H5.2C5.50779 2 5.57369 2.00348 5.61672 2.01382C5.79955 2.05771 5.94229 2.20045 5.98619 2.38328C5.99652 2.42632 6 2.49222 6 2.8V5.2C6 5.50779 5.99652 5.57369 5.98619 5.61672C5.94229 5.79955 5.79955 5.94229 5.61672 5.98619C5.57369 5.99652 5.50779 6 5.2 6H2.8C2.49222 6 2.42632 5.99652 2.38328 5.98619C2.20045 5.94229 2.05771 5.79955 2.01382 5.61672C2.00348 5.57369 2 5.50779 2 5.2V2.8C2 2.49222 2.00348 2.42632 2.01382 2.38328C2.05771 2.20045 2.20045 2.05771 2.38328 2.01382ZM9.8 1L9.74967 0.99997C9.52122 0.999752 9.32429 0.999564 9.14983 1.04145C8.60136 1.17312 8.17312 1.60136 8.04145 2.14983C7.99956 2.32429 7.99975 2.52122 7.99997 2.74967L8 2.8V5.2L7.99997 5.25033C7.99975 5.47878 7.99956 5.67572 8.04145 5.85017C8.17312 6.39864 8.60136 6.82688 9.14983 6.95856C9.32429 7.00044 9.52122 7.00025 9.74967 7.00003L9.8 7H12.2L12.2503 7.00003C12.4788 7.00025 12.6757 7.00044 12.8502 6.95856C13.3986 6.82688 13.8269 6.39864 13.9586 5.85017C14.0004 5.67572 14.0003 5.47878 14 5.25033L14 5.2V2.8L14 2.74967C14.0003 2.52122 14.0004 2.32429 13.9586 2.14983C13.8269 1.60136 13.3986 1.17312 12.8502 1.04145C12.6757 0.999564 12.4788 0.999752 12.2503 0.99997L12.2 1H9.8ZM9.38328 2.01382C9.42632 2.00348 9.49222 2 9.8 2H12.2C12.5078 2 12.5737 2.00348 12.6167 2.01382C12.7995 2.05771 12.9423 2.20045 12.9862 2.38328C12.9965 2.42632 13 2.49222 13 2.8V5.2C13 5.50779 12.9965 5.57369 12.9862 5.61672C12.9423 5.79955 12.7995 5.94229 12.6167 5.98619C12.5737 5.99652 12.5078 6 12.2 6H9.8C9.49222 6 9.42632 5.99652 9.38328 5.98619C9.20045 5.94229 9.05771 5.79955 9.01382 5.61672C9.00348 5.57369 9 5.50779 9 5.2V2.8C9 2.49222 9.00348 2.42632 9.01382 2.38328C9.05771 2.20045 9.20045 2.05771 9.38328 2.01382ZM2.74967 7.99997L2.8 8H5.2L5.25033 7.99997C5.47878 7.99975 5.67572 7.99956 5.85017 8.04145C6.39864 8.17312 6.82688 8.60136 6.95856 9.14983C7.00044 9.32429 7.00025 9.52122 7.00003 9.74967L7 9.8V12.2L7.00003 12.2503C7.00025 12.4788 7.00044 12.6757 6.95856 12.8502C6.82688 13.3986 6.39864 13.8269 5.85017 13.9586C5.67572 14.0004 5.47878 14.0003 5.25033 14L5.2 14H2.8L2.74967 14C2.52122 14.0003 2.32429 14.0004 2.14983 13.9586C1.60136 13.8269 1.17312 13.3986 1.04145 12.8502C0.999564 12.6757 0.999752 12.4788 0.99997 12.2503L1 12.2V9.8L0.99997 9.74967C0.999752 9.52122 0.999564 9.32429 1.04145 9.14983C1.17312 8.60136 1.60136 8.17312 2.14983 8.04145C2.32429 7.99956 2.52122 7.99975 2.74967 7.99997ZM2.8 9C2.49222 9 2.42632 9.00348 2.38328 9.01382C2.20045 9.05771 2.05771 9.20045 2.01382 9.38328C2.00348 9.42632 2 9.49222 2 9.8V12.2C2 12.5078 2.00348 12.5737 2.01382 12.6167C2.05771 12.7995 2.20045 12.9423 2.38328 12.9862C2.42632 12.9965 2.49222 13 2.8 13H5.2C5.50779 13 5.57369 12.9965 5.61672 12.9862C5.79955 12.9423 5.94229 12.7995 5.98619 12.6167C5.99652 12.5737 6 12.5078 6 12.2V9.8C6 9.49222 5.99652 9.42632 5.98619 9.38328C5.94229 9.20045 5.79955 9.05771 5.61672 9.01382C5.57369 9.00348 5.50779 9 5.2 9H2.8ZM9.8 8L9.74967 7.99997C9.52122 7.99975 9.32429 7.99956 9.14983 8.04145C8.60136 8.17312 8.17312 8.60136 8.04145 9.14983C7.99956 9.32429 7.99975 9.52122 7.99997 9.74967L8 9.8V12.2L7.99997 12.2503C7.99975 12.4788 7.99956 12.6757 8.04145 12.8502C8.17312 13.3986 8.60136 13.8269 9.14983 13.9586C9.32429 14.0004 9.52122 14.0003 9.74967 14L9.8 14H12.2L12.2503 14C12.4788 14.0003 12.6757 14.0004 12.8502 13.9586C13.3986 13.8269 13.8269 13.3986 13.9586 12.8502C14.0004 12.6757 14.0003 12.4788 14 12.2503L14 12.2V9.8L14 9.74967C14.0003 9.52122 14.0004 9.32429 13.9586 9.14983C13.8269 8.60136 13.3986 8.17312 12.8502 8.04145C12.6757 7.99956 12.4788 7.99975 12.2503 7.99997L12.2 8H9.8ZM9.38328 9.01382C9.42632 9.00348 9.49222 9 9.8 9H12.2C12.5078 9 12.5737 9.00348 12.6167 9.01382C12.7995 9.05771 12.9423 9.20045 12.9862 9.38328C12.9965 9.42632 13 9.49222 13 9.8V12.2C13 12.5078 12.9965 12.5737 12.9862 12.6167C12.9423 12.7995 12.7995 12.9423 12.6167 12.9862C12.5737 12.9965 12.5078 13 12.2 13H9.8C9.49222 13 9.42632 12.9965 9.38328 12.9862C9.20045 12.9423 9.05771 12.7995 9.01382 12.6167C9.00348 12.5737 9 12.5078 9 12.2V9.8C9 9.49222 9.00348 9.42632 9.01382 9.38328C9.05771 9.20045 9.20045 9.05771 9.38328 9.01382Z"
        fill={color}
      />
    </svg>
  );
};

export default NavAdmin;
